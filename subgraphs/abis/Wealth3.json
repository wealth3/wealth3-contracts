[
  { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "userId",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "newDeposit",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "userId",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "_newProofOfLife",
        "type": "uint256"
      }
    ],
    "name": "newProofOfLife",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "contractTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "proofOfLifeFreq",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "lastProofOfLife",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "beneficiaries",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "distribution",
            "type": "uint256[]"
          }
        ],
        "indexed": false,
        "internalType": "struct Wealth3.Vault",
        "name": "vault",
        "type": "tuple"
      }
    ],
    "name": "newVault",
    "type": "event"
  },
  {
    "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "name": "Vaults",
    "outputs": [
      { "internalType": "uint256", "name": "contractTime", "type": "uint256" },
      {
        "internalType": "uint256",
        "name": "proofOfLifeFreq",
        "type": "uint256"
      },
      { "internalType": "uint256", "name": "amount", "type": "uint256" },
      {
        "internalType": "uint256",
        "name": "lastProofOfLife",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "_contractTime", "type": "uint256" },
      {
        "internalType": "uint256",
        "name": "_proofOfLifeFreq",
        "type": "uint256"
      },
      {
        "internalType": "address[]",
        "name": "_beneficiaries",
        "type": "address[]"
      },
      {
        "internalType": "uint256[]",
        "name": "_distributions",
        "type": "uint256[]"
      }
    ],
    "name": "createVault",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "contractTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "proofOfLifeFreq",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "lastProofOfLife",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "beneficiaries",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "distribution",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct Wealth3.Vault",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "deposit",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "contractTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "proofOfLifeFreq",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "lastProofOfLife",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "beneficiaries",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "distribution",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct Wealth3.Vault",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "_userId", "type": "address" }
    ],
    "name": "getVault",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "contractTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "proofOfLifeFreq",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "lastProofOfLife",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "beneficiaries",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "distribution",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct Wealth3.Vault",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "updateProofOfLife",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdrawAllFundsAdmin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
